name: Initialize the GitHub Repository

# This is a bootstrapping workflow to initialize the repository with a pre-populated issue for building a rating feature
# on the project.
#
# It also enables the secret push protection rules, that needs to occur only after the repository has been created
# as we have a secret in the repository initial commit.git commi
#

on:
  workflow_dispatch:

jobs:
  create:
    name: Create issue
    runs-on: ubuntu-20.04

    steps:
      - name: Checkout Sources
        uses: actions/checkout@v3

      - name: Create Issue
        id: create-issue
        uses: JasonEtco/create-an-issue@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          filename: .github/issues/rating-feature-issue.md

      - name: Add Design Team Comment
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const commentBody = `
            ðŸ‘‹ Hey, I have worked this out and provided the assets in the repository by direct file upload.

            Let me know if you want anything else, I think this image specifies everything you need.

            ![](https://user-images.githubusercontent.com/1982588/84479857-ea579600-ac93-11ea-8877-56b02462cbc5.png)`

            await github.rest.issues.createComment({
              ...context.repo,
              issue_number: ${{ steps.create-issue.outputs.number }},
              body: commentBody
            })

      - name: Add Product Owner Comment
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const commentBody = `
            ðŸ‘‹ This is great. Scrum masters, can you check how much capacity you need to implement this.
            We can then decide which sprint we put it in. Let\'s get this in people ðŸ˜„`

            await github.rest.issues.createComment({
              ...context.repo,
              issue_number: ${{ steps.create-issue.outputs.number }},
              body: commentBody
            })

      - name: Get temporary token for updating repo settings
        id: temp_token
        uses: peter-murray/workflow-application-token-action@v2.1
        with:
          application_id: ${{ secrets.OCTODEMOBOT_APPLICATION_ID_REPO_AUTOMATION }}
          application_private_key: ${{ secrets.OCTODEMOBOT_APPLICATION_KEY_REPO_AUTOMATION }}

      - name: Update Secret Scanning Push Protection Rule
        uses: actions/github-script@v6
        with:
          github-token: ${{ steps.temp_token.outputs.token }}
          script: |
            await github.rest.repos.update({
              ...context.repo,
              security_and_analysis: {
                secret_scanning_push_protection: {
                  status: "enabled"
                }
              }
            });